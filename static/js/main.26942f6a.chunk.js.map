{"version":3,"sources":["App.js","components/Button.js","components/Result.js","serviceWorker.js","index.js"],"names":["App","props","onClick","button","calculate","reset","test","state","blockingZero","result","length","console","log","setState","avibleDots","endsWith","arr","split","slice","push","join","numCount","eval","e","backspace","lastOperator","script","document","createElement","src","body","appendChild","className","this","React","Component","NumButtons","id","value","target","Result","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26942f6a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport NumButtons from './components/Button'\nimport Result from './components/Result';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      result: \"\",\n      avibleDots: 1,\n      blockingZero: true,\n      lastOperator: []\n    }\n  }\n\n  componentDidMount() {\n    let script = document.createElement('script')\n    script.src = 'https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js'\n    document.body.appendChild(script)\n  }\n  onClick = button => {\n\n    if (button === \"=\") {\n      this.calculate()\n    } else if (button === \"AC\") {\n      this.reset()\n    } else {\n      //handling nums\n      if (/[0-9]/.test(button) === true) {\n        //multiple 0 handling\n        if (button === \"0\") {\n          if (this.state.blockingZero === true && this.state.result[this.state.result.length - 1] === \"0\") {\n            console.log(\"blocked\")\n          } else {\n            this.setState({\n              result: this.state.result + button,\n            })\n          }\n        } else {\n          this.setState({\n            result: this.state.result + button,\n            blockingZero: false\n          })\n        }\n        //handling special chars\n      } else {\n        //handling multiple dots\n        if (button === \"+\" || \"-\" || \"*\" || \"/\") {\n          (() => {\n            this.setState({\n              avibleDots: 1,\n              blockingZero: true,\n            })\n          })();\n        }\n        if (button === \".\" && this.state.avibleDots === 1) {\n          this.setState({\n            result: this.state.result + button,\n            avibleDots: 0\n          })\n        } else if (button === \".\" && this.state.avibleDots === 0) {\n          console.log(\"no dots\")\n        }\n        else if (this.state.result.endsWith(\"+\") || this.state.result.endsWith(\"*\") || this.state.result.endsWith(\"/\")) {\n          (() => {\n            this.setState({\n              result: (() => {\n                if (button === \"-\") {\n                  return this.state.result\n                } else {\n                  //changing last operator\n                  let arr = this.state.result.split('').slice(0, -1)\n                  arr.push(button)\n                  arr = arr.join('')\n                  console.log(arr)\n                  return arr\n                }\n              })()\n            })\n          })();\n        }\n        else {\n          this.setState({\n            result: this.state.result + button\n          })\n        }\n      }\n\n    }\n  }\n  calculate = () => {\n    console.log(this.state.result, this.state.numCount)\n    try {\n      this.setState({\n        //eslint-disable-next-line\n        result: (eval(this.state.result) || \"\") + \"\"\n      })\n    } catch (e) {\n      this.setState({\n        result: \"error\"\n      })\n    }\n  }\n  reset = () => {\n    this.setState({\n      result: \"\",\n      avibleDots: 1,\n      blockingZero: true\n    })\n  }\n  backspace = () => {\n    this.setState({\n      result: this.state.result.slice(0, -1)\n    })\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Result result={this.state.result} />\n        <NumButtons onClick={this.onClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nclass NumButtons extends React.Component {\n\n    render() {\n        return (\n            <div className=\"buttons-container\">\n                <div className=\"actions\">\n                    <button id=\"equals\" value=\"=\" onClick={e => this.props.onClick(e.target.value)}>=</button>\n                    <button id=\"add\" value=\"+\" onClick={e => this.props.onClick(e.target.value)}>+</button>\n                    <button id=\"subtract\" value=\"-\" onClick={e => this.props.onClick(e.target.value)}>-</button>\n                    <button id=\"multiply\" value=\"*\" onClick={e => this.props.onClick(e.target.value)}>*</button>\n                    <button id=\"divide\" value=\"/\" onClick={e => this.props.onClick(e.target.value)}>/</button>\n                    <button id=\"decimal\" value=\".\" onClick={e => this.props.onClick(e.target.value)}>.</button>\n                    <button id=\"clear\" value=\"AC\" onClick={e => this.props.onClick(e.target.value)}>AC</button>\n                </div>\n                <div className=\"number\">\n                    <button id=\"zero\" value=\"0\" onClick={e => this.props.onClick(e.target.value)}>0</button>\n                    <button id=\"one\" value=\"1\" onClick={e => this.props.onClick(e.target.value)}>1</button>\n                    <button id=\"two\" value=\"2\" onClick={e => this.props.onClick(e.target.value)}>2</button>\n                    <button id=\"three\" value=\"3\" onClick={e => this.props.onClick(e.target.value)}>3</button>\n                    <button id=\"four\" value=\"4\" onClick={e => this.props.onClick(e.target.value)}>4</button>\n                    <button id=\"five\" value=\"5\" onClick={e => this.props.onClick(e.target.value)}>5</button>\n                    <button id=\"six\" value=\"6\" onClick={e => this.props.onClick(e.target.value)}>6</button>\n                    <button id=\"seven\" value=\"7\" onClick={e => this.props.onClick(e.target.value)}>7</button>\n                    <button id=\"eight\" value=\"8\" onClick={e => this.props.onClick(e.target.value)}>8</button>\n                    <button id=\"nine\" value=\"9\" onClick={e => this.props.onClick(e.target.value)}>9</button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NumButtons ","import React, { Component } from 'react';\n\nclass Result extends Component {\n\n\n    render() {\n        let { result } = this.props;\n        return (\n            <div className=\"result\">\n                <p id=\"display\">{result.length < 1 ? 0 : result}</p>\n            </div>\n        )\n            ;\n    }\n}\n\n\nexport default Result;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}